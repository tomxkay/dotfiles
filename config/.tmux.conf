# ==========================
# ===  General settings  ===
# ==========================
setw -g aggressive-resize on
setw -g automatic-rename on
set -g base-index 1
set -g display-panes-time 800
set -g display-time 1000
setw -g monitor-activity on
setw -g pane-base-index 1
set -g renumber-windows on
set -g status-interval 10
set -g set-titles on
set -g set-titles-string "#I:#W"
set -g visual-activity on

set -g buffer-limit 20
set -g default-shell "/bin/zsh"
set -g default-terminal "screen-256color"
set-option -sa terminal-overrides ',*256col*:RGB'
set -s set-clipboard on
set -g display-time 1500
set -sg escape-time 0
set -g history-limit 20000
set -g mode-keys vi
set -g mouse on
set -g remain-on-exit off
set -g repeat-time 300

# ==========================
# ===   Key bindings     ===
# ==========================
# Edit configuration and reload
bind C-e new-window -n 'tmux.conf' "sh -c '\${EDITOR:-vim} $XDG_CONFIG_HOME/tmux/tmux.conf && tmux source $XDG_CONFIG_HOME/tmux/tmux.conf && tmux display \"Reloaded!\"'"

# Prompt to rename window right after it's created
set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'

# Rebind prefix
set -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix

bind r source-file $XDG_CONFIG_HOME/tmux/tmux.conf \; display "Reloaded!"
bind c new-window -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# switch pane
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# iterm: set left option key to Esc+ to act as Meta
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# switch window
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

bind -n S-Left previous-window
bind -n S-Right next-window

# switch session
bind -n C-S-Right switch-client -n
bind -n C-S-Left switch-client -p

# resize pane
bind -n M-H resize-pane -L 5
bind -n M-J resize-pane -D 5
bind -n M-K resize-pane -U 5
bind -n M-L resize-pane -R 5

bind -n M-C-H resize-pane -L 5
bind -n M-C-J resize-pane -D 5
bind -n M-C-K resize-pane -U 5
bind -n M-C-L resize-pane -R 5

# Swap pane
bind -r C-j swap-pane -D
bind -r C-k swap-pane -U

# join pane into recent window
# bind-key @ choose-window 'join-pane -h -s "%%"'
bind-key F command-prompt -p "Join pane from: " "join-pane -s '%%'"
bind-key T command-prompt -p "Send pane to: " "join-pane -t '%%'"
bind-key M select-pane -m
bind-key J join-pane

# Copy/Paste

bind P paste-buffer # Prefix-P to paste
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"
bind -T copy-mode-vi MouseDown1Pane select-pane \; send-keys -X clear-selection

bind S if -F '#{s/off//:status}' 'set status off' 'set status on'

bind -T copy-mode-vi WheelUpPane select-pane \; send-keys -X -N 2 scroll-up
bind -T copy-mode-vi WheelDownPane select-pane \; send-keys -X -N 2 scroll-down

# wrap default shell in reattach-to-user-namespace if available
if -b "command -v reattach-to-user-namespace > /dev/null 2>&1" \
    "run 'tmux set -g default-command \"exec $(tmux show -gv default-shell) 2>/dev/null & reattach-to-user-namespace -l $(tmux show -gv default-shell)\"'"

# =============================================
# ===   Nesting local and remote sessions   ===
# =============================================
if-shell 'test -n "$SSH_CLIENT"' \
    'set -g status-position top'

# =====================================
# ===        Renew environment      ===
# =====================================
set -g update-environment \
  "DISPLAY\
  SSH_ASKPASS\
  SSH_AUTH_SOCK\
  SSH_AGENT_PID\
  SSH_CONNECTION\
  SSH_TTY\
  WINDOWID\
  XAUTHORITY"

path_script_renew_env="$XDG_CONFIG_HOME/tmux/script/renew_env.sh"
if-shell "test -f $path_script_renew_env" \
	"bind E run $XDG_CONFIG_HOME/tmux/script/renew_env.sh"

# ============================
# ===     Theme Color      ===
# ============================
color_orange="colour166"
color_purple="colour134"
color_green="colour076"
color_blue="colour39"
color_yellow="colour220"
color_red="colour160"
color_black="colour232"
color_white="white"

color_dark="$color_black"
color_light="$color_white"
color_session_text="$color_blue"
color_status_text="colour245"
color_main="$color_orange"
color_secondary="#a89984"
color_level_ok="$color_green"
color_level_warn="$color_yellow"
color_level_stress="$color_red"
color_window_off_indicator="colour088"
color_window_off_status_bg="colour238"
color_window_off_status_current_bg="colour254"

# ==========================
# ===     Status Bar     ===
# ==========================
set -g status-justify "centre"
set -g status "on"
set -g status-left-style "none"
set -g message-command-style "fg=colour246,bg=colour239"
set -g status-right-style "none"
set -g pane-active-border-style "fg=colour208"
set -g status-style "none,bg=colour243"
set -g message-style "fg=colour246,bg=colour239"
set -g pane-border-style "fg=colour239"
set -g status-right-length "100"
set -g status-left-length "100"
setw -g window-status-activity-style "none,fg=colour208,bg=colour243"
setw -g window-status-separator ""
setw -g window-status-style "none,fg=colour235,bg=colour243"
set -g status-left "#[fg=colour235,bg=colour208] #S #[fg=colour208,bg=colour239,nobold,nounderscore,noitalics]#[fg=colour239,bg=colour243,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=colour243,bg=colour243,nobold,nounderscore,noitalics]#[fg=colour235,bg=colour243] #{prefix_highlight} #[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = \"off\" ] && echo \"OFF\")#[default] #[fg=$color_dark,bg=$color_secondary]#{?window_zoomed_flag,[Z],}#[default] %a %h %d %R #{battery_status_fg} #[fg=colour239,bg=colour243,nobold,nounderscore,noitalics]#[fg=colour208,bg=colour239,nobold,nounderscore,noitalics]#[fg=colour235,bg=colour208] #(whoami)@#H #{online_status}"
setw -g window-status-format "#[fg=colour243,bg=colour243,nobold,nounderscore,noitalics]#[default] #I #W #[fg=colour243,bg=colour243,nobold,nounderscore,noitalics]"
setw -g window-status-current-format "#[fg=colour243,bg=colour239,nobold,nounderscore,noitalics]#[fg=colour246,bg=colour239] #I #W #F #[fg=colour239,bg=colour243,nobold,nounderscore,noitalics]"

# Source status line if exists: use to override status bar
path_conf_status_bar="$XDG_CONFIG_HOME/tmux/tmuxline/gruvbox-airline-visual.tmux.conf"
if-shell "test -f $path_conf_status_bar" "source $path_conf_status_bar"

bind -T root F12  \
    set prefix None \;\
    set key-table off \;\
    set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
    set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
    set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S

# ==========================
# ===       Plugins      ===
# ==========================
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'sainnhe/tmux-plugin-sysstat'

# ==========================
# ===  Plugin Settings   ===
# ==========================
# tmux-cpu
set -g @cpu_low_fg_color "#[fg=$color_level_ok]"
set -g @cpu_medium_fg_color "#[fg=$color_level_warn]"
set -g @cpu_high_fg_color "#[fg=$color_level_stress]"

# tmux-plugin-syssta
set -g @sysstat_mem_view_tmpl '#[fg=colour235]MEM: #[fg=#{mem.color}]#{mem.pused} #[fg=colour235]#{mem.used}'
set -g @sysstat_swap_view_tmpl '#[fg=colour235]SW: #[fg=#{swap.color}]#{swap.pused} #[fg=colour235]#{swap.used}'

set -g @sysstat_mem_color_low "$color_level_ok"
set -g @sysstat_mem_color_medium "$color_level_warn"
set -g @sysstat_mem_color_stress "$color_level_stress"

set -g @sysstat_swap_color_low "$color_level_ok"
set -g @sysstat_swap_color_medium "$color_level_warn"
set -g @sysstat_swap_color_stress "$color_level_stress"

# tmux-prefix-highlight
set -g @prefix_highlight_output_prefix '['
set -g @prefix_highlight_output_suffix ']'
set -g @prefix_highlight_fg "$color_dark"
set -g @prefix_highlight_bg "$color_secondary"
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr "fg=$color_dark,bg=$color_secondary"

set -g @prefix_highlight_fg 'colour00'
set -g @prefix_highlight_bg 'red'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=colour00,bg=colour05,bold'
set -g @prefix_highlight_prefix_prompt 'PREFIX'
set -g @prefix_highlight_copy_prompt 'COPY'

# tmux-battery
set -g @batt_color_full_charge "#[fg=$color_level_ok]"
set -g @batt_color_high_charge "#[fg=$color_level_ok]"
set -g @batt_color_medium_charge "#[fg=$color_level_warn]"
set -g @batt_color_low_charge "#[fg=$color_level_stress]"

# tmux-online-status
set -g @online_icon "#[fg=$color_level_ok]●#[default]"
set -g @offline_icon "#[fg=$color_level_stress]●#[default]"

# tmux-open
set -g @open-S 'https://www.duckduckgo.com/'

# tmux-continuum
set -g @continuum-restore 'on'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '$XDG_CONFIG_HOME/tmux/plugins/tpm/tpm'
